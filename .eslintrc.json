{
  "extends": "eslint:recommended",
  "env": {
    "browser": true,
    "es6": true,
    "es2021": true
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaVersion": 12
  },
  "plugins": [
    "@typescript-eslint"
  ],
  "rules": {
    "semi": [
      "error",
      "always"
    ],
    "quotes": [
      "warn",
      "double",
      {
        "avoidEscape": true,
        "allowTemplateLiterals": true
      }
    ],
    "for-direction": "warn",
    "eqeqeq": [
      "warn",
      "always",
      {
        "null": "ignore"
      }
    ]
  },
  "overrides": [
    {
      "files": [
        "*.ts"
      ],
      "rules": {
        "constructor-super": "error", // ts(2335) & ts(2377)
        "getter-return": "error", // ts(2378)
        "no-const-assign": "error", // ts(2588)
        "no-dupe-args": "error", // ts(2300)
        "no-dupe-class-members": "off", // ts(2393) & ts(2300)
        "no-dupe-keys": "error", // ts(1117)
        "no-func-assign": "error", // ts(2539)
        "no-import-assign": "error", // ts(2539) & ts(2540)
        "no-new-symbol": "error", // ts(2588)
        "no-obj-calls": "error", // ts(2349)
        "no-redeclare": "off", // ts(2451)
        "no-setter-return": "error", // ts(2408)
        "no-this-before-super": "error", // ts(2376)
        "no-undef": "off", // ts(2304)
        "no-unreachable": "error", // ts(7027)
        "no-unsafe-negation": "error", // ts(2365) & ts(2360) & ts(2358)
        "no-unused-vars": [
          "warn",
          {
            "vars": "all",
            "args": "none",
            "ignoreRestSiblings": false
          }
        ],
        "@typescript-eslint/no-unused-vars": [
          "warn", // or "error"
          {
            "argsIgnorePattern": "^_",
            "varsIgnorePattern": "^_",
            "caughtErrorsIgnorePattern": "^_"
          }
        ], // ts transpiles let/const to var, so no need for vars any more
        "prefer-const": "warn", // ts provides better types with const
        "prefer-rest-params": "error", // ts provides better types with rest args over arguments
        "prefer-spread": "error", // ts transpiles spread to apply, so no need for manual apply
        "valid-typeof": "error", // ts(2367)
        "camelcase": "error"
      }
    }
  ]
}